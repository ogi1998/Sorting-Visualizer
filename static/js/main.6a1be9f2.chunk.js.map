{"version":3,"sources":["SortingAlgorithms/SortingAlgorithms.js","SortingAnimations/SortingAnimations.js","SortingVisualizer/SortingVisualizer.js","App.js","serviceWorker.js","index.js"],"names":["mergeSort","array","length","middleIndex","Math","floor","firstHalf","slice","secondHalf","sortedArray","i","j","push","animate","animations","speed","algorithm","colorDefault","colorFinish","colorSorted","activeOne","activeTwo","enableButtons","setTimeout","indices","firstIndex","secondIndex","values","firstValue","secondValue","swap","changeColors","swapElements","color","document","getElementById","style","backgroundColor","finish","speedMultiplier","els","getElementsByClassName","height","colorBlue","colorGreen","SortingVisualizer","state","max","this","resetArray","setSpeed","isNaN","alert","setState","randomIntFromInterval","radios","getElementsByName","checked","defaultValue","disableButtons","obj","shouldPush","tmp","SortingAlgorithms","SortingAnimations","btns","disabled","min","temp","arrayOne","arrayTwo","mergeSortedArray","javaScriptSortedArray","sort","a","b","console","log","arraysAreEqual","random","value","className","onChange","e","changeLength","target","type","id","htmlFor","name","defaultChecked","onClick","resetAll","bubbleSort","selectionSort","insertionSort","map","idx","key","width","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6a1be9f2.chunk.js","sourcesContent":["export const mergeSort = array => {\n\tif (array.length === 1) return array;\n\n\tconst middleIndex = Math.floor(array.length / 2);\n\tconst firstHalf = mergeSort(array.slice(0, middleIndex));\n\tconst secondHalf = mergeSort(array.slice(middleIndex));\n\tconst sortedArray = [];\n\tlet i = 0,\n\t\tj = 0;\n\twhile (i < firstHalf.length && j < secondHalf.length) {\n\t\tif (firstHalf[i] < secondHalf[j]) {\n\t\t\tsortedArray.push(firstHalf[i++]);\n\t\t} else {\n\t\t\tsortedArray.push(secondHalf[j++]);\n\t\t}\n\t}\n\twhile (i < firstHalf.length) sortedArray.push(firstHalf[i++]);\n\twhile (j < secondHalf.length) sortedArray.push(secondHalf[j++]);\n\treturn sortedArray;\n};\n\nexport const bubbleSort = array => {\n\tconst animations = [];\n\tconst length = array.length;\n\tlet obj = {};\n\tlet shouldPush = false;\n\tfor (let i = 0; i < length; i++) {\n\t\tfor (let j = 0; j < length - i; j++) {\n\t\t\tif (array[j] > array[j + 1]) {\n\t\t\t\tshouldPush = true;\n\t\t\t\tobj = {\n\t\t\t\t\tindices: {firstIndex: j, secondIndex: j + 1},\n\t\t\t\t\tvalues: {firstValue: array[j], secondValue: array[j + 1]},\n\t\t\t\t\tswap: true,\n\t\t\t\t\tcolor: false,\n\t\t\t\t}\n\t\t\t\tlet tmp = array[j];\n\t\t\t\tarray[j] = array[j + 1];\n\t\t\t\tarray[j + 1] = tmp;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tshouldPush = true;\n\t\t\t\tobj = {\n\t\t\t\t\tindices: {firstIndex: j, secondIndex: j + 1},\n\t\t\t\t\tvalues: {firstValue: array[j], secondValue: array[j + 1]},\n\t\t\t\t\tswap: false,\n\t\t\t\t\tcolor: false,\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(j === length - i - 1) {\n\t\t\t\tobj.color = true;\n\t\t\t}\n\t\t\tif (shouldPush) animations.push(obj);\n\t\t}\n\t}\n\treturn animations;\n};\n\nexport const selectionSort = array => {\n\tconst animations = [];\n\tlet obj = {};\n    for (let i = 0; i < array.length; i++) {\n        let min = i;\n        for (let j = i + 1; j < array.length; j++) {\n            if (array[min] > array[j]) {\n                min = j;\n            }\n\t\t}\n\t\tobj = {\n\t\t\tindices: {firstIndex: min, secondIndex: i},\n\t\t\tvalues: {firstValue: array[min], secondValue: array[i]},\n\t\t\tswap: true,\n\t\t\tcolor: true,\n\t\t}\n        if (min !== i) {\n\n            let tmp = array[i];\n            array[i] = array[min];\n\t\t\tarray[min] = tmp;\n\t\t}\n\t\tif(i === array.length - i - 1) {\n\t\t\tobj.color = true;\n\t\t}\n\t\tanimations.push(obj);\n\t}\n\treturn animations;\n};\n\nexport const insertionSort = array => {\n\tconst animations = [];\n\tlet obj = {};\n\tfor (let i = 1; i < array.length; i++) {\n\t\twhile(array[i] < array[i - 1]) {\n\t\t\tobj = {\n\t\t\t\tindices: {firstIndex: i, secondIndex: i - 1},\n\t\t\t\tvalues: {firstValue: array[i], secondValue: array[i - 1]},\n\t\t\t\tswap: true,\n\t\t\t\tcolor: true,\n\t\t\t}\n\t\t\tlet temp = array[i];\n\t\t\tarray[i] = array[i - 1];\n\t\t\tarray[i - 1] = temp;\n\t\t\tanimations.push(obj);\n\t\t\ti--;\n\t\t}\n\t}\n\treturn animations;\n};\n  \n","export const animate = (\n\tanimations,\n\tspeed,\n\talgorithm,\n\tcolorDefault,\n\tcolorFinish,\n\tcolorSorted,\n\tactiveOne,\n\tactiveTwo,\n\tenableButtons\n) => {\n\tfor (let i = 0; i < animations.length; i++) {\n\t\tsetTimeout(() => {\n\t\t\tconst { firstIndex, secondIndex } = animations[i].indices;\n\t\t\tconst { firstValue, secondValue } = animations[i].values;\n\t\t\tif (animations[i].swap) {\n\t\t\t\tchangeColors(firstIndex, secondIndex, speed, colorDefault, activeOne, activeTwo);\n\t\t\t\tswapElements(firstIndex, secondIndex, firstValue, secondValue, speed);\n\t\t\t}\n\n\t\t\tif (animations[i].color) {\n\t\t\t\tif (algorithm === 'bubble') {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tif (animations[i].swap) {\n\t\t\t\t\t\t\tdocument.getElementById(secondIndex).style.backgroundColor = colorFinish;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdocument.getElementById(firstIndex).style.backgroundColor = colorFinish;\n\t\t\t\t\t\t}\n\t\t\t\t\t}, speed / 4);\n\t\t\t\t} else if (algorithm === 'insertion') {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tif (animations[i].swap) {\n\t\t\t\t\t\t\tdocument.getElementById(firstIndex).style.backgroundColor = colorFinish;\n\t\t\t\t\t\t\tdocument.getElementById(secondIndex).style.backgroundColor = colorFinish;\n\t\t\t\t\t\t}\n\t\t\t\t\t}, speed);\n\t\t\t\t} else if (algorithm === 'selection') {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tif (animations[i].swap) {\n\t\t\t\t\t\t\tdocument.getElementById(secondIndex).style.backgroundColor = colorFinish;\n\t\t\t\t\t\t}\n\t\t\t\t\t}, speed);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (i === animations.length - 1) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tfinish(colorSorted, colorFinish);\n\t\t\t\t}, 100);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tenableButtons();\n\t\t\t\t}, 2000);\n\t\t\t}\n\t\t}, i * speed);\n\t}\n};\n\nconst changeColors = (firstIndex, secondIndex, speed, colorDefault, activeOne, activeTwo) => {\n\tlet speedMultiplier = 1;\n\tif (speed <= 100) {\n\t\tspeedMultiplier = 10;\n\t} else if (speed <= 1000) {\n\t\tspeedMultiplier = 100;\n\t}\n  const els = document.getElementsByClassName('arr-el');\n  // At insertion speed should be speed - speed / 2\n\tsetTimeout(() => {\n\t\tels[firstIndex].style.backgroundColor = colorDefault;\n\t\tels[secondIndex].style.backgroundColor = colorDefault;\n\t}, speed);\n\n\tsetTimeout(() => {\n\t\tels[firstIndex].style.backgroundColor = activeOne;\n\t\tels[secondIndex].style.backgroundColor = activeTwo;\n\t}, speed - 5 * speedMultiplier);\n};\nconst swapElements = (firstIndex, secondIndex, firstValue, secondValue, speed) => {\n\tsetTimeout(() => {\n\t\tdocument.getElementById(secondIndex).style.height = `${firstValue / 2}px`;\n\t\tdocument.getElementById(firstIndex).style.height = `${secondValue / 2}px`;\n\t}, speed);\n};\n\nconst finish = (colorBlue, colorGreen) => {\n\tconst els = document.getElementsByClassName('arr-el');\n\tfor (let i = 0; i < els.length; i++) {\n\t\tsetTimeout(() => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tels[i].style.backgroundColor = colorBlue;\n\t\t\t}, i * 10);\n\t\t}, 1000);\n\t\tsetTimeout(() => {\n\t\t\tels[i].style.backgroundColor = colorGreen;\n\t\t}, i * 10);\n\t}\n};\n","import React, { Component } from 'react';\nimport * as SortingAlgorithms from '../SortingAlgorithms/SortingAlgorithms';\nimport * as SortingAnimations from '../SortingAnimations/SortingAnimations';\nimport './SortingVisualizer.css';\n\n// const ANIMATION_SPEED = 10;\nconst COLOR_DEFAULT = '#e87e04'; // ZUTA\nconst COLOR_FINISH = '#27ae60'; // ZELENA\nconst COLOR_SORTED = '#2980b9'; // PLAVA\nconst COLOR_ACTIVE_ONE = '#F22613'; // CRVENA\nconst COLOR_ACTIVE_TWO = '#9A12B3'; // LJUBICASTA\n\nexport default class SortingVisualizer extends Component {\n\tstate = {\n\t\tarray: [100, 500, 200, 300, 600, 400],\n\t\tmax: 5,\n\t\tspeed: 10\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.resetArray();\n\t\tthis.setSpeed();\n\t}\n\tresetArray() {\n\t\tconst { max } = this.state;\n\t\tif (max === '' || isNaN(max)) {\n\t\t\talert('Length must be a number!!!');\n\t\t\tthis.setState({ max: 5 });\n\t\t\treturn false;\n\t\t}\n\t\tif (max < 5 || max > 200) {\n\t\t\talert('Length must be a number between 5 and 300!');\n\t\t\tthis.setState({ max: 5 });\n\t\t\treturn false;\n\t\t}\n\t\tconst array = [];\n\t\tconst length = max;\n\t\t// const length = this.randomIntFromInterval(5, max);\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tarray.push(this.randomIntFromInterval(5, 950));\n\t\t}\n\t\tthis.setState({ array });\n\t\tconst els = document.getElementsByClassName('arr-el');\n\t\tfor (let i = 0; i < els.length; i++) {\n\t\t\tels[i].style.backgroundColor = COLOR_DEFAULT;\n\t\t}\n\t}\n\tsetSpeed() {\n\t\tconst radios = document.getElementsByName(\"speed\");\n\t\tfor (let i = 0; i< radios.length; i++) {\n\t\t\tif(radios[i].checked) {\n\t\t\t\tthis.setState({speed: radios[i].defaultValue});\n\t\t\t}\n\t\t}\n\t}\n\tresetAll() {\n\t\tthis.resetArray();\n\t\tthis.setSpeed();\n\t}\n\n\tbubbleSort() {\n\t\tconst {speed} = this.state;\n\t\tthis.disableButtons();\n\t\tconst animations = SortingAlgorithms.bubbleSort(this.state.array);\n\t\tSortingAnimations.animate(\n\t\t\tanimations,\n\t\t\tspeed,\n\t\t\t'bubble',\n\t\t\tCOLOR_DEFAULT,\n\t\t\tCOLOR_FINISH,\n\t\t\tCOLOR_SORTED,\n\t\t\tCOLOR_ACTIVE_ONE,\n\t\t\tCOLOR_ACTIVE_TWO,\n\t\t\tthis.enableButtons\n\t\t);\n\t}\n\tselectionSort() {\n\t\tconst {speed} = this.state;\n\t\tthis.disableButtons();\n\t\tconst btns = document.getElementsByClassName('btn');\n\t\tfor (let i = 0; i < btns.length; i++) {\n\t\t\tbtns[i].disabled = true;\n\t\t}\n\t\tconst animations = SortingAlgorithms.selectionSort(this.state.array);\n\t\tSortingAnimations.animate(\n\t\t\tanimations,\n\t\t\tspeed,\n\t\t\t'selection',\n\t\t\tCOLOR_DEFAULT,\n\t\t\tCOLOR_FINISH,\n\t\t\tCOLOR_SORTED,\n\t\t\tCOLOR_ACTIVE_ONE,\n\t\t\tCOLOR_ACTIVE_TWO,\n\t\t\tthis.enableButtons\n\t\t);\n\t}\n\tinsertionSort() {\n\t\tconst {speed} = this.state;\n\t\tthis.disableButtons();\n\t\tconst btns = document.getElementsByClassName('btn');\n\t\tfor (let i = 0; i < btns.length; i++) {\n\t\t\tbtns[i].disabled = true;\n\t\t}\n\t\tconst animations = SortingAlgorithms.insertionSort(this.state.array);\n\t\tSortingAnimations.animate(\n\t\t\tanimations,\n\t\t\tspeed,\n\t\t\t'insertion',\n\t\t\tCOLOR_DEFAULT,\n\t\t\tCOLOR_FINISH,\n\t\t\tCOLOR_SORTED,\n\t\t\tCOLOR_ACTIVE_ONE,\n\t\t\tCOLOR_ACTIVE_TWO,\n\t\t\tthis.enableButtons\n\t\t);\n\t}\n\tarraysAreEqual(arrayOne, arrayTwo) {\n\t\tif (arrayOne.length !== arrayTwo.length) return false;\n\t\tfor (let i = 0; i < arrayOne.length; i++) {\n\t\t\tif (arrayOne[i] !== arrayTwo[i]) return false;\n\t\t}\n\t\treturn true;\n\t}\n\ttestSortingAlgorithms() {\n\t\tconst array = [];\n\t\tconst length = this.randomIntFromInterval(5, 1000);\n\t\tfor (let i = 0; i < 100; i++) {\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tarray.push(this.randomIntFromInterval(5, 1000));\n\t\t\t}\n\t\t\tconst mergeSortedArray = SortingAlgorithms.mergeSort(array);\n\t\t\tconst javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n\t\t\tconsole.log(this.arraysAreEqual(javaScriptSortedArray, mergeSortedArray));\n\t\t}\n\t}\n\n\trandomIntFromInterval(min, max) {\n\t\treturn Math.floor(Math.random() * (max - min + 1) + min);\n\t}\n\tdisableButtons() {\n\t\tconst btns = document.getElementsByClassName('btn');\n\t\tfor (let i = 0; i < btns.length; i++) {\n\t\t\tbtns[i].disabled = true;\n\t\t}\n\t}\n\tenableButtons() {\n\t\tconst btns = document.getElementsByClassName('btn');\n\t\tfor (let i = 0; i < btns.length; i++) {\n\t\t\tbtns[i].disabled = false;\n\t\t}\n\t}\n\tchangeLength(value) {\n\t\tthis.setState({ max: value });\n\t}\n\trender() {\n\t\tconst { array } = this.state;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<header>\n\t\t\t\t\t<h3>SORTING VISUALIZER</h3>\n\t\t\t\t\t<div className='length'>\n\t\t\t\t\t\t<label>Length: </label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tvalue={this.state.max}\n\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\tthis.changeLength(e.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tid='length-input'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='speed'>\n\t\t\t\t\t\t<label htmlFor='speed'>Speed: </label>\n\t\t\t\t\t\t<label htmlFor='speed'>1s</label>\n\t\t\t\t\t\t<input type='radio' value = \"1000\" name='speed' id='speed1' />\n\t\t\t\t\t\t<label htmlFor='speed'>100ms</label>\n\t\t\t\t\t\t<input type='radio' value = \"100\" name='speed' id='speed1' />\n\t\t\t\t\t\t<label htmlFor='speed'>10ms</label>\n\t\t\t\t\t\t<input defaultChecked type='radio' value = \"10\" name='speed' id='speed1' />\n\t\t\t\t\t</div>\n\t\t\t\t\t<button className='btn' onClick={() => this.resetAll()}>\n\t\t\t\t\t\tGenerate New Array\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className='btn' onClick={() => this.bubbleSort()}>\n\t\t\t\t\t\tBubble Sort\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className='btn' onClick={() => this.selectionSort()}>\n\t\t\t\t\t\tSelection Sort\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className='btn' onClick={() => this.insertionSort()}>\n\t\t\t\t\t\tInsertion Sort\n\t\t\t\t\t</button>\n\t\t\t\t\t{/* <button className = \"btn\" onClick={() => this.testSortingAlgorithms()}>Test Sort</button> */}\n\t\t\t\t</header>\n\t\t\t\t<main>\n\t\t\t\t\t<div className='array-container'>\n\t\t\t\t\t\t{array.map((value, idx) => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName='arr-el'\n\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\tid={idx}\n\t\t\t\t\t\t\t\tstyle={{ height: `${value / 2}px`, width: `${1000 / array.length}px` }}></div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</main>\n\t\t\t\t<footer>\n\t\t\t\t\t<address>Developed by Ognjen Vujasinovic. All rights reserved &copy;</address>\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}