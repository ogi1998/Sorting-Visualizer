{"version":3,"sources":["SortingAlgorithms/SortingAlgorithms.js","SortingAnimations/SortingAnimations.js","SortingVisualizer/SortingVisualizer.js","App.js","serviceWorker.js","index.js"],"names":["bubbleSort","array","animations","length","obj","shouldPush","i","j","indices","firstIndex","secondIndex","values","firstValue","secondValue","swap","color","tmp","push","animate","speed","algorithm","colorDefault","colorFinish","colorSorted","activeOne","activeTwo","enableButtons","setTimeout","finish","changeColors","swapElements","document","getElementById","style","backgroundColor","shouldSwap","speedMultiplier","els","getElementsByClassName","height","colorBlue","colorGreen","SortingVisualizer","state","max","this","resetArray","setSpeed","isNaN","alert","setState","randomIntFromInterval","radios","getElementsByName","checked","defaultValue","disableButtons","SortingAlgorithms","SortingAnimations","btns","disabled","min","temp","arrayOne","arrayTwo","mergeSortedArray","javaScriptSortedArray","slice","sort","a","b","console","log","arraysAreEqual","Math","floor","random","value","className","onChange","e","changeLength","target","type","id","htmlFor","name","defaultChecked","onClick","resetAll","selectionSort","insertionSort","map","idx","key","width","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iTAqBaA,EAAa,SAAAC,GAKzB,IAJA,IAAMC,EAAa,GACbC,EAASF,EAAME,OACjBC,EAAM,GACNC,GAAa,EACRC,EAAI,EAAGA,EAAIH,EAAQG,IAC3B,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAASG,EAAGC,IAAK,CACpC,GAAIN,EAAMM,GAAKN,EAAMM,EAAI,GAAI,CAC5BF,GAAa,EACbD,EAAM,CACLI,QAAS,CAACC,WAAYF,EAAGG,YAAaH,EAAI,GAC1CI,OAAQ,CAACC,WAAYX,EAAMM,GAAIM,YAAaZ,EAAMM,EAAI,IACtDO,MAAM,EACNC,OAAO,GAER,IAAIC,EAAMf,EAAMM,GAChBN,EAAMM,GAAKN,EAAMM,EAAI,GACrBN,EAAMM,EAAI,GAAKS,OAGfX,GAAa,EACbD,EAAM,CACLI,QAAS,CAACC,WAAYF,EAAGG,YAAaH,EAAI,GAC1CI,OAAQ,CAACC,WAAYX,EAAMM,GAAIM,YAAaZ,EAAMM,EAAI,IACtDO,MAAM,EACNC,OAAO,GAGNR,IAAMJ,EAASG,EAAI,IACrBF,EAAIW,OAAQ,GAETV,GAAYH,EAAWe,KAAKb,GAGlC,OAAOF,GCvDKgB,EAAU,SACrBhB,EACAiB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAG0B,IAAtBxB,EAAWC,SACbwB,YAAW,WACTC,EAAOL,EAAaD,KACnB,KACHK,YAAW,WACTD,MACC,MAEL,IAVG,eAUMpB,GACPqB,YAAW,WAAO,IAAD,EACqBzB,EAAWI,GAAGE,QAA1CC,EADO,EACPA,WAAYC,EADL,EACKA,YADL,EAEkBR,EAAWI,GAAGK,OAA1CC,EAFU,EAEVA,WAAYC,EAFF,EAEEA,YACpBgB,EACDpB,EACAC,EACAS,EACAE,EACAG,EACAC,EACAL,EACAlB,EAAWI,GAAGQ,MAENZ,EAAWI,GAAGQ,MAChBgB,EAAarB,EAAYC,EAAaE,EAAYC,EAAaM,GAE7DjB,EAAWI,GAAGS,QACE,WAAdK,EACFO,YAAW,WACLzB,EAAWI,GAAGQ,KAChBiB,SAASC,eACPtB,GACAuB,MAAMC,gBAAkBZ,EAE1BS,SAASC,eACPvB,GACAwB,MAAMC,gBAAkBZ,IAG3BH,GACoB,cAAdC,EACTO,YAAW,WACLzB,EAAWI,GAAGQ,OAChBiB,SAASC,eACPvB,GACAwB,MAAMC,gBAAkBZ,EAC1BS,SAASC,eACPtB,GACAuB,MAAMC,gBAAkBZ,KAE3BH,GACoB,cAAdC,GACTO,YAAW,WACLzB,EAAWI,GAAGQ,OAChBiB,SAASC,eACPtB,GACAuB,MAAMC,gBAAkBZ,KAE3BH,IAGHb,IAAMJ,EAAWC,OAAS,IAC5BwB,YAAW,WACTC,EAAOL,EAAaD,KACnBH,GACHQ,YAAW,WACTD,MACC,QAEJpB,EAAIa,IA5DAb,EAAI,EAAGA,EAAIJ,EAAWC,OAAQG,IAAM,EAApCA,IAgELuB,EAAe,SACnBpB,EACAC,EACAS,EACAE,EACAG,EACAC,EACAL,EACCe,GAED,IAAIC,EAAkB,EAClBjB,GAAS,IACXiB,EAAkB,GACTjB,GAAS,MAClBiB,EAAkB,KAEpB,IAAMC,EAAMN,SAASO,uBAAuB,UACzCH,EACc,cAAdf,GACHO,YAAW,WACTU,EAAI5B,GAAYwB,MAAMC,gBAAkBb,EACxCgB,EAAI3B,GAAauB,MAAMC,gBAAkBb,IACxCF,GAIe,WAAdC,GACJO,YAAW,WACVU,EAAI5B,GAAYwB,MAAMC,gBAAkBb,IAEpCF,GAIDgB,EAOJR,YAAW,WACVU,EAAI5B,GAAYwB,MAAMC,gBAAkBV,EACxCa,EAAI3B,GAAauB,MAAMC,gBAAkBT,IACvCN,EAAQ,EAAIiB,GATfT,YAAW,WACO,WAAdP,IACFiB,EAAI5B,GAAYwB,MAAMC,gBAAkBV,KACvCL,EAAQ,EAAIiB,IASXN,EAAe,SACnBrB,EACAC,EACAE,EACAC,EACAM,GAEAQ,YAAW,WACTI,SAASC,eAAetB,GAAauB,MAAMM,OAA3C,UAAuD3B,EAAa,EAApE,MACAmB,SAASC,eAAevB,GAAYwB,MAAMM,OAA1C,UAAsD1B,EAAc,EAApE,QACCM,IAGCS,EAAS,SAACY,EAAWC,EAAYtB,GAErC,IADA,IAAMkB,EAAMN,SAASO,uBAAuB,UADG,WAEtChC,GACPqB,YAAW,WACTA,YAAW,WACTU,EAAI/B,GAAG2B,MAAMC,gBAAkBM,IAC1B,GAAJlC,KACF,KAEHqB,YAAW,WACTU,EAAI/B,GAAG2B,MAAMC,gBAAkBO,IAC1B,GAAJnC,IATIA,EAAI,EAAGA,EAAI+B,EAAIlC,OAAQG,IAAM,EAA7BA,ICtIUoC,G,iNACpBC,MAAQ,CACP1C,MAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KACjC2C,IAAK,EACLzB,MAAO,K,mFAIP0B,KAAKC,aACLD,KAAKE,a,mCAEQ,IACLH,EAAQC,KAAKF,MAAbC,IACR,GAAY,KAARA,GAAcI,MAAMJ,GAGvB,OAFAK,MAAM,8BACNJ,KAAKK,SAAS,CAAEN,IAAK,KACd,EAER,GAAIA,EAAM,GAAKA,EAAM,IAGpB,OAFAK,MAAM,8CACNJ,KAAKK,SAAS,CAAEN,IAAK,KACd,EAKR,IAHA,IAAM3C,EAAQ,GACRE,EAASyC,EAENtC,EAAI,EAAGA,EAAIH,EAAQG,IAC3BL,EAAMgB,KAAK4B,KAAKM,sBAAsB,EAAG,MAE1CN,KAAKK,SAAS,CAAEjD,UAEhB,IADA,IAAMoC,EAAMN,SAASO,uBAAuB,UACnChC,EAAI,EAAGA,EAAI+B,EAAIlC,OAAQG,IAC/B+B,EAAI/B,GAAG2B,MAAMC,gBAtCM,Y,iCA2CpB,IADA,IAAMkB,EAASrB,SAASsB,kBAAkB,SACjC/C,EAAI,EAAGA,EAAG8C,EAAOjD,OAAQG,IAC9B8C,EAAO9C,GAAGgD,SACZT,KAAKK,SAAS,CAAC/B,MAAOiC,EAAO9C,GAAGiD,iB,iCAKlCV,KAAKC,aACLD,KAAKE,a,mCAGQ,IACN5B,EAAS0B,KAAKF,MAAdxB,MACP0B,KAAKW,iBACL,IAAMtD,EAAauD,EAA6BZ,KAAKF,MAAM1C,OAC3DyD,EACCxD,EACAiB,EACA,SA7DmB,UACD,UACA,UACI,UACA,UA+DtB0B,KAAKnB,iB,sCAGU,IACTP,EAAS0B,KAAKF,MAAdxB,MACP0B,KAAKW,iBAEL,IADA,IAAMG,EAAO5B,SAASO,uBAAuB,OACpChC,EAAI,EAAGA,EAAIqD,EAAKxD,OAAQG,IAChCqD,EAAKrD,GAAGsD,UAAW,EAEpB,IAAM1D,EFzBqB,SAAAD,GAGzB,IAFH,IAAMC,EAAa,GACfE,EAAM,GACEE,EAAI,EAAGA,EAAIL,EAAME,OAAQG,IAAK,CAEnC,IADA,IAAIuD,EAAMvD,EACDC,EAAID,EAAI,EAAGC,EAAIN,EAAME,OAAQI,IAC9BN,EAAM4D,GAAO5D,EAAMM,KACnBsD,EAAMtD,GASd,GANNH,EAAM,CACLI,QAAS,CAACC,WAAYoD,EAAKnD,YAAaJ,GACxCK,OAAQ,CAACC,WAAYX,EAAM4D,GAAMhD,YAAaZ,EAAMK,IACpDQ,MAAM,EACNC,OAAO,GAEE8C,IAAQvD,EAAG,CAEX,IAAIU,EAAMf,EAAMK,GAChBL,EAAMK,GAAKL,EAAM4D,GAC1B5D,EAAM4D,GAAO7C,EAEXV,IAAML,EAAME,OAASG,EAAI,IAC3BF,EAAIW,OAAQ,GAEbb,EAAWe,KAAKb,GAEjB,OAAOF,EEFauD,CAAgCZ,KAAKF,MAAM1C,OAC9DyD,EACCxD,EACAiB,EACA,YAjFmB,UACD,UACA,UACI,UACA,UAmFtB0B,KAAKnB,iB,sCAGU,IACTP,EAAS0B,KAAKF,MAAdxB,MACP0B,KAAKW,iBAEL,IADA,IAAMG,EAAO5B,SAASO,uBAAuB,OACpChC,EAAI,EAAGA,EAAIqD,EAAKxD,OAAQG,IAChCqD,EAAKrD,GAAGsD,UAAW,EAEpB,IAAM1D,EFfqB,SAAAD,GAG5B,IAFA,IAAMC,EAAa,GACfE,EAAM,GACDE,EAAI,EAAGA,EAAIL,EAAME,OAAQG,IAEhC,KAAML,EAAMK,GAAKL,EAAMK,EAAI,IAAI,CAC9BF,EAAM,CACLI,QAAS,CAACC,WAAYH,EAAGI,YAAaJ,EAAI,GAC1CK,OAAQ,CAACC,WAAYX,EAAMK,GAAIO,YAAaZ,EAAMK,EAAI,IACtDQ,MAAM,EACNC,OAAO,GAER,IAAI+C,EAAO7D,EAAMK,GACjBL,EAAMK,GAAKL,EAAMK,EAAI,GACrBL,EAAMK,EAAI,GAAKwD,EACf5D,EAAWe,KAAKb,GAChBE,IAIH,OAAOJ,EELauD,CAAgCZ,KAAKF,MAAM1C,OAC9DyD,EACCxD,EACAiB,EACA,YArGmB,UACD,UACA,UACI,UACA,UAuGtB0B,KAAKnB,iB,qCAGQqC,EAAUC,GACxB,GAAID,EAAS5D,SAAW6D,EAAS7D,OAAQ,OAAO,EAChD,IAAK,IAAIG,EAAI,EAAGA,EAAIyD,EAAS5D,OAAQG,IACpC,GAAIyD,EAASzD,KAAO0D,EAAS1D,GAAI,OAAO,EAEzC,OAAO,I,8CAKP,IAFA,IAAML,EAAQ,GACRE,EAAS0C,KAAKM,sBAAsB,EAAG,KACpC7C,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC7B,IAAK,IAAIA,EAAI,EAAGA,EAAIH,EAAQG,IAC3BL,EAAMgB,KAAK4B,KAAKM,sBAAsB,EAAG,MAE1C,IAAMc,EAAmBR,EAA6BxD,GAChDiE,EAAwBjE,EAAMkE,QAAQC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAC/DC,QAAQC,IAAI3B,KAAK4B,eAAeP,EAAuBD,O,4CAInCJ,EAAKjB,GAC1B,OAAO8B,KAAKC,MAAMD,KAAKE,UAAYhC,EAAMiB,EAAM,GAAKA,K,uCAIpD,IADA,IAAMF,EAAO5B,SAASO,uBAAuB,OACpChC,EAAI,EAAGA,EAAIqD,EAAKxD,OAAQG,IAChCqD,EAAKrD,GAAGsD,UAAW,I,sCAKpB,IADA,IAAMD,EAAO5B,SAASO,uBAAuB,OACpChC,EAAI,EAAGA,EAAIqD,EAAKxD,OAAQG,IAChCqD,EAAKrD,GAAGsD,UAAW,I,mCAGRiB,GACZhC,KAAKK,SAAS,CAAEN,IAAKiC,M,+BAEZ,IAAD,OACA5E,EAAU4C,KAAKF,MAAf1C,MACR,OACC,6BACC,gCACC,kDACA,yBAAK6E,UAAU,UACd,2CACA,2BACCD,MAAOhC,KAAKF,MAAMC,IAClBmC,SAAU,SAAAC,GACT,EAAKC,aAAaD,EAAEE,OAAOL,QAE5BM,KAAK,OACLC,GAAG,kBAGL,yBAAKN,UAAU,SACd,2BAAOO,QAAQ,SAAf,WACA,2BAAOA,QAAQ,SAAf,MACA,2BAAOF,KAAK,QAAQN,MAAQ,OAAOS,KAAK,QAAQF,GAAG,WACnD,2BAAOC,QAAQ,SAAf,SACA,2BAAOF,KAAK,QAAQN,MAAQ,MAAMS,KAAK,QAAQF,GAAG,WAClD,2BAAOC,QAAQ,SAAf,QACA,2BAAOE,gBAAc,EAACJ,KAAK,QAAQN,MAAQ,KAAKS,KAAK,QAAQF,GAAG,YAEjE,4BAAQN,UAAU,MAAMU,QAAS,kBAAM,EAAKC,aAA5C,sBAGA,4BAAQX,UAAU,MAAMU,QAAS,kBAAM,EAAKxF,eAA5C,eAGA,4BAAQ8E,UAAU,MAAMU,QAAS,kBAAM,EAAKE,kBAA5C,kBAGA,4BAAQZ,UAAU,MAAMU,QAAS,kBAAM,EAAKG,kBAA5C,mBAKD,8BACC,yBAAKb,UAAU,mBACb7E,EAAM2F,KAAI,SAACf,EAAOgB,GAAR,OACV,yBACCf,UAAU,SACVgB,IAAKD,EACLT,GAAIS,EACJ5D,MAAO,CAAEM,OAAO,GAAD,OAAKsC,EAAQ,EAAb,MAAoBkB,MAAM,GAAD,OAAK,IAAO9F,EAAME,OAAlB,cAI5C,gCACC,oG,GAlM0C6F,c,MCAhCC,MARf,WACE,OACE,yBAAKnB,UAAU,OACb,kBAAC,EAAD,QCKcoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASzE,SAASC,eAAe,SD6H3C,kBAAmByE,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.feb09c7e.chunk.js","sourcesContent":["// export const mergeSort = array => {\n// \tif (array.length === 1) return array;\n\n// \tconst middleIndex = Math.floor(array.length / 2);\n// \tconst firstHalf = mergeSort(array.slice(0, middleIndex));\n// \tconst secondHalf = mergeSort(array.slice(middleIndex));\n// \tconst sortedArray = [];\n// \tlet i = 0,\n// \t\tj = 0;\n// \twhile (i < firstHalf.length && j < secondHalf.length) {\n// \t\tif (firstHalf[i] < secondHalf[j]) {\n// \t\t\tsortedArray.push(firstHalf[i++]);\n// \t\t} else {\n// \t\t\tsortedArray.push(secondHalf[j++]);\n// \t\t}\n// \t}\n// \twhile (i < firstHalf.length) sortedArray.push(firstHalf[i++]);\n// \twhile (j < secondHalf.length) sortedArray.push(secondHalf[j++]);\n// \treturn sortedArray;\n// };\n\nexport const bubbleSort = array => {\n\tconst animations = [];\n\tconst length = array.length;\n\tlet obj = {};\n\tlet shouldPush = false;\n\tfor (let i = 0; i < length; i++) {\n\t\tfor (let j = 0; j < length - i; j++) {\n\t\t\tif (array[j] > array[j + 1]) {\n\t\t\t\tshouldPush = true;\n\t\t\t\tobj = {\n\t\t\t\t\tindices: {firstIndex: j, secondIndex: j + 1},\n\t\t\t\t\tvalues: {firstValue: array[j], secondValue: array[j + 1]},\n\t\t\t\t\tswap: true,\n\t\t\t\t\tcolor: false,\n\t\t\t\t}\n\t\t\t\tlet tmp = array[j];\n\t\t\t\tarray[j] = array[j + 1];\n\t\t\t\tarray[j + 1] = tmp;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tshouldPush = true;\n\t\t\t\tobj = {\n\t\t\t\t\tindices: {firstIndex: j, secondIndex: j + 1},\n\t\t\t\t\tvalues: {firstValue: array[j], secondValue: array[j + 1]},\n\t\t\t\t\tswap: false,\n\t\t\t\t\tcolor: false,\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(j === length - i - 1) {\n\t\t\t\tobj.color = true;\n\t\t\t}\n\t\t\tif (shouldPush) animations.push(obj);\n\t\t}\n\t}\n\treturn animations;\n};\n\nexport const selectionSort = array => {\n\tconst animations = [];\n\tlet obj = {};\n    for (let i = 0; i < array.length; i++) {\n        let min = i;\n        for (let j = i + 1; j < array.length; j++) {\n            if (array[min] > array[j]) {\n                min = j;\n            }\n\t\t}\n\t\tobj = {\n\t\t\tindices: {firstIndex: min, secondIndex: i},\n\t\t\tvalues: {firstValue: array[min], secondValue: array[i]},\n\t\t\tswap: true,\n\t\t\tcolor: true,\n\t\t}\n        if (min !== i) {\n\n            let tmp = array[i];\n            array[i] = array[min];\n\t\t\tarray[min] = tmp;\n\t\t}\n\t\tif(i === array.length - i - 1) {\n\t\t\tobj.color = true;\n\t\t}\n\t\tanimations.push(obj);\n\t}\n\treturn animations;\n};\n\nexport const insertionSort = array => {\n\tconst animations = [];\n\tlet obj = {};\n\tfor (let i = 1; i < array.length; i++) {\n\t\t// Need to know if its being sorted at all\n\t\t\twhile(array[i] < array[i - 1]) {\n\t\t\t\tobj = {\n\t\t\t\t\tindices: {firstIndex: i, secondIndex: i - 1},\n\t\t\t\t\tvalues: {firstValue: array[i], secondValue: array[i - 1]},\n\t\t\t\t\tswap: true,\n\t\t\t\t\tcolor: true,\n\t\t\t\t}\n\t\t\t\tlet temp = array[i];\n\t\t\t\tarray[i] = array[i - 1];\n\t\t\t\tarray[i - 1] = temp;\n\t\t\t\tanimations.push(obj);\n\t\t\t\ti--;\n\t\t\t}\n\n\t}\n\treturn animations;\n};\n  \n","export const animate = (\n  animations,\n  speed,\n  algorithm,\n  colorDefault,\n  colorFinish,\n  colorSorted,\n  activeOne,\n  activeTwo,\n  enableButtons\n) => {\n\t// In case array is already sorted (there was a bug with Insertion, others will still loop and check)\n  if (animations.length === 0) {\n    setTimeout(() => {\n      finish(colorSorted, colorFinish);\n    }, 100);\n    setTimeout(() => {\n      enableButtons();\n    }, 2000);\n  }\n  for (let i = 0; i < animations.length; i++) {\n    setTimeout(() => {\n      const { firstIndex, secondIndex } = animations[i].indices;\n\t  const { firstValue, secondValue } = animations[i].values;\n\t  changeColors(\n\t\tfirstIndex,\n\t\tsecondIndex,\n\t\tspeed,\n\t\tcolorDefault,\n\t\tactiveOne,\n\t\tactiveTwo,\n\t\talgorithm,\n\t\tanimations[i].swap\n\t  );\n      if (animations[i].swap) {\n        swapElements(firstIndex, secondIndex, firstValue, secondValue, speed);\n\t  }\n      if (animations[i].color) {\n        if (algorithm === \"bubble\") {\n          setTimeout(() => {\n            if (animations[i].swap) {\n              document.getElementById(\n                secondIndex\n              ).style.backgroundColor = colorFinish;\n            } else {\n              document.getElementById(\n                firstIndex\n              ).style.backgroundColor = colorFinish;\n\t\t\t}\n\t\t\t// speed / 4\n          }, speed);\n        } else if (algorithm === \"insertion\") {\n          setTimeout(() => {\n            if (animations[i].swap) {\n              document.getElementById(\n                firstIndex\n              ).style.backgroundColor = colorFinish;\n              document.getElementById(\n                secondIndex\n              ).style.backgroundColor = colorFinish;\n            }\n          }, speed);\n        } else if (algorithm === \"selection\") {\n          setTimeout(() => {\n            if (animations[i].swap) {\n              document.getElementById(\n                secondIndex\n              ).style.backgroundColor = colorFinish;\n            }\n          }, speed);\n        }\n      }\n      if (i === animations.length - 1) {\n        setTimeout(() => {\n          finish(colorSorted, colorFinish);\n        }, speed);\n        setTimeout(() => {\n          enableButtons();\n        }, 2000);\n      }\n    }, i * speed);\n  }\n};\n\nconst changeColors = (\n  firstIndex,\n  secondIndex,\n  speed,\n  colorDefault,\n  activeOne,\n  activeTwo,\n  algorithm,\n   shouldSwap\n) => {\n  let speedMultiplier = 1;\n  if (speed <= 100) {\n    speedMultiplier = 10;\n  } else if (speed <= 1000) {\n    speedMultiplier = 100;\n  }\n  const els = document.getElementsByClassName(\"arr-el\");\n  if(shouldSwap) {\n\tif (algorithm !== \"insertion\") {\n\t\tsetTimeout(() => {\n\t\t  els[firstIndex].style.backgroundColor = colorDefault;\n\t\t  els[secondIndex].style.backgroundColor = colorDefault;\n\t\t}, speed);\n\t  }\n  }\n  else {\n\t  if(algorithm === \"bubble\") {\n\t\tsetTimeout(() => {\n\t\t\tels[firstIndex].style.backgroundColor = colorDefault;\n\t\t\t// els[secondIndex].style.backgroundColor = colorDefault;\n\t\t  }, speed);\t  \n\t  }\n  }\n\n  if(!shouldSwap) {\n  setTimeout(() => {\n\t  if(algorithm === \"bubble\")\n\t\t  els[firstIndex].style.backgroundColor = activeOne;\n\t\t}, speed - 5 * speedMultiplier);\n\t}\n\telse {\n\t\tsetTimeout(() => {\n\t\t\tels[firstIndex].style.backgroundColor = activeOne;\n\t\t\tels[secondIndex].style.backgroundColor = activeTwo;\n\t\t}, speed - 5 * speedMultiplier);\n\t}\n};\nconst swapElements = (\n  firstIndex,\n  secondIndex,\n  firstValue,\n  secondValue,\n  speed\n) => {\n  setTimeout(() => {\n    document.getElementById(secondIndex).style.height = `${firstValue / 2}px`;\n    document.getElementById(firstIndex).style.height = `${secondValue / 2}px`;\n  }, speed);\n};\n\nconst finish = (colorBlue, colorGreen, speed) => {\n  const els = document.getElementsByClassName(\"arr-el\");\n  for (let i = 0; i < els.length; i++) {\n    setTimeout(() => {\n      setTimeout(() => {\n        els[i].style.backgroundColor = colorBlue;\n      }, i * 10);\n    }, 1000);\n    // U slucaju da je prvi najmanji i nismo prosli kroz njega moramo sve prvo obojiti zelenom\n    setTimeout(() => {\n      els[i].style.backgroundColor = colorGreen;\n    }, i * 10);\n  }\n};\n","import React, { Component } from 'react';\nimport * as SortingAlgorithms from '../SortingAlgorithms/SortingAlgorithms';\nimport * as SortingAnimations from '../SortingAnimations/SortingAnimations';\nimport './SortingVisualizer.css';\n\n// const ANIMATION_SPEED = 10;\nconst COLOR_DEFAULT = '#e87e04'; // ZUTA\nconst COLOR_FINISH = '#27ae60'; // ZELENA\nconst COLOR_SORTED = '#2980b9'; // PLAVA\nconst COLOR_ACTIVE_ONE = '#F22613'; // CRVENA\nconst COLOR_ACTIVE_TWO = '#9A12B3'; // LJUBICASTA\n\nexport default class SortingVisualizer extends Component {\n\tstate = {\n\t\tarray: [100, 200, 300, 400, 600, 500 ],\n\t\tmax: 5,\n\t\tspeed: 1000\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.resetArray();\n\t\tthis.setSpeed();\n\t}\n\tresetArray() {\n\t\tconst { max } = this.state;\n\t\tif (max === '' || isNaN(max)) {\n\t\t\talert('Length must be a number!!!');\n\t\t\tthis.setState({ max: 5 });\n\t\t\treturn false;\n\t\t}\n\t\tif (max < 5 || max > 200) {\n\t\t\talert('Length must be a number between 5 and 300!');\n\t\t\tthis.setState({ max: 5 });\n\t\t\treturn false;\n\t\t}\n\t\tconst array = [];\n\t\tconst length = max;\n\t\t// const length = this.randomIntFromInterval(5, max);\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tarray.push(this.randomIntFromInterval(5, 950));\n\t\t}\n\t\tthis.setState({ array });\n\t\tconst els = document.getElementsByClassName('arr-el');\n\t\tfor (let i = 0; i < els.length; i++) {\n\t\t\tels[i].style.backgroundColor = COLOR_DEFAULT;\n\t\t}\n\t}\n\tsetSpeed() {\n\t\tconst radios = document.getElementsByName(\"speed\");\n\t\tfor (let i = 0; i< radios.length; i++) {\n\t\t\tif(radios[i].checked) {\n\t\t\t\tthis.setState({speed: radios[i].defaultValue});\n\t\t\t}\n\t\t}\n\t}\n\tresetAll() {\n\t\tthis.resetArray();\n\t\tthis.setSpeed();\n\t}\n\n\tbubbleSort() {\n\t\tconst {speed} = this.state;\n\t\tthis.disableButtons();\n\t\tconst animations = SortingAlgorithms.bubbleSort(this.state.array);\n\t\tSortingAnimations.animate(\n\t\t\tanimations,\n\t\t\tspeed,\n\t\t\t'bubble',\n\t\t\tCOLOR_DEFAULT,\n\t\t\tCOLOR_FINISH,\n\t\t\tCOLOR_SORTED,\n\t\t\tCOLOR_ACTIVE_ONE,\n\t\t\tCOLOR_ACTIVE_TWO,\n\t\t\tthis.enableButtons\n\t\t);\n\t}\n\tselectionSort() {\n\t\tconst {speed} = this.state;\n\t\tthis.disableButtons();\n\t\tconst btns = document.getElementsByClassName('btn');\n\t\tfor (let i = 0; i < btns.length; i++) {\n\t\t\tbtns[i].disabled = true;\n\t\t}\n\t\tconst animations = SortingAlgorithms.selectionSort(this.state.array);\n\t\tSortingAnimations.animate(\n\t\t\tanimations,\n\t\t\tspeed,\n\t\t\t'selection',\n\t\t\tCOLOR_DEFAULT,\n\t\t\tCOLOR_FINISH,\n\t\t\tCOLOR_SORTED,\n\t\t\tCOLOR_ACTIVE_ONE,\n\t\t\tCOLOR_ACTIVE_TWO,\n\t\t\tthis.enableButtons\n\t\t);\n\t}\n\tinsertionSort() {\n\t\tconst {speed} = this.state;\n\t\tthis.disableButtons();\n\t\tconst btns = document.getElementsByClassName('btn');\n\t\tfor (let i = 0; i < btns.length; i++) {\n\t\t\tbtns[i].disabled = true;\n\t\t}\n\t\tconst animations = SortingAlgorithms.insertionSort(this.state.array);\n\t\tSortingAnimations.animate(\n\t\t\tanimations,\n\t\t\tspeed,\n\t\t\t'insertion',\n\t\t\tCOLOR_DEFAULT,\n\t\t\tCOLOR_FINISH,\n\t\t\tCOLOR_SORTED,\n\t\t\tCOLOR_ACTIVE_ONE,\n\t\t\tCOLOR_ACTIVE_TWO,\n\t\t\tthis.enableButtons\n\t\t);\n\t}\n\tarraysAreEqual(arrayOne, arrayTwo) {\n\t\tif (arrayOne.length !== arrayTwo.length) return false;\n\t\tfor (let i = 0; i < arrayOne.length; i++) {\n\t\t\tif (arrayOne[i] !== arrayTwo[i]) return false;\n\t\t}\n\t\treturn true;\n\t}\n\ttestSortingAlgorithms() {\n\t\tconst array = [];\n\t\tconst length = this.randomIntFromInterval(5, 1000);\n\t\tfor (let i = 0; i < 100; i++) {\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tarray.push(this.randomIntFromInterval(5, 1000));\n\t\t\t}\n\t\t\tconst mergeSortedArray = SortingAlgorithms.bubbleSort(array);\n\t\t\tconst javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n\t\t\tconsole.log(this.arraysAreEqual(javaScriptSortedArray, mergeSortedArray));\n\t\t}\n\t}\n\n\trandomIntFromInterval(min, max) {\n\t\treturn Math.floor(Math.random() * (max - min + 1) + min);\n\t}\n\tdisableButtons() {\n\t\tconst btns = document.getElementsByClassName('btn');\n\t\tfor (let i = 0; i < btns.length; i++) {\n\t\t\tbtns[i].disabled = true;\n\t\t}\n\t}\n\tenableButtons() {\n\t\tconst btns = document.getElementsByClassName('btn');\n\t\tfor (let i = 0; i < btns.length; i++) {\n\t\t\tbtns[i].disabled = false;\n\t\t}\n\t}\n\tchangeLength(value) {\n\t\tthis.setState({ max: value });\n\t}\n\trender() {\n\t\tconst { array } = this.state;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<header>\n\t\t\t\t\t<h3>SORTING VISUALIZER</h3>\n\t\t\t\t\t<div className='length'>\n\t\t\t\t\t\t<label>Length: </label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tvalue={this.state.max}\n\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\tthis.changeLength(e.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tid='length-input'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='speed'>\n\t\t\t\t\t\t<label htmlFor='speed'>Speed: </label>\n\t\t\t\t\t\t<label htmlFor='speed'>1s</label>\n\t\t\t\t\t\t<input type='radio' value = \"1000\" name='speed' id='speed1' />\n\t\t\t\t\t\t<label htmlFor='speed'>100ms</label>\n\t\t\t\t\t\t<input type='radio' value = \"100\" name='speed' id='speed1' />\n\t\t\t\t\t\t<label htmlFor='speed'>10ms</label>\n\t\t\t\t\t\t<input defaultChecked type='radio' value = \"10\" name='speed' id='speed1' />\n\t\t\t\t\t</div>\n\t\t\t\t\t<button className='btn' onClick={() => this.resetAll()}>\n\t\t\t\t\t\tGenerate New Array\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className='btn' onClick={() => this.bubbleSort()}>\n\t\t\t\t\t\tBubble Sort\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className='btn' onClick={() => this.selectionSort()}>\n\t\t\t\t\t\tSelection Sort\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className='btn' onClick={() => this.insertionSort()}>\n\t\t\t\t\t\tInsertion Sort\n\t\t\t\t\t</button>\n\t\t\t\t\t{/* <button className = \"btn\" onClick={() => this.testSortingAlgorithms()}>Test Sort</button> */}\n\t\t\t\t</header>\n\t\t\t\t<main>\n\t\t\t\t\t<div className='array-container'>\n\t\t\t\t\t\t{array.map((value, idx) => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName='arr-el'\n\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\tid={idx}\n\t\t\t\t\t\t\t\tstyle={{ height: `${value / 2}px`, width: `${1000 / array.length}px` }}></div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</main>\n\t\t\t\t<footer>\n\t\t\t\t\t<address>Developed by Ognjen Vujasinovic. All rights reserved &copy;</address>\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}