{"version":3,"sources":["SortingAlgorithms/SortingAlgorithms.js","SortingAnimations/SortingAnimations.js","SortingVisualizer/SortingVisualizer.js","App.js","serviceWorker.js","index.js"],"names":["mergeSort","array","length","middleIndex","Math","floor","firstHalf","slice","secondHalf","sortedArray","i","j","push","animate","animations","speed","algorithm","colorDefault","colorFinish","colorSorted","activeOne","activeTwo","setTimeout","indices","firstIndex","secondIndex","values","firstValue","secondValue","swap","changeColors","swapElements","color","document","getElementById","style","backgroundColor","finish","speedMultiplier","els","getElementsByClassName","height","colorBlue","colorGreen","SortingVisualizer","state","this","resetArray","randomIntFromInterval","setState","obj","shouldPush","tmp","SortingAlgorithms","SortingAnimations","min","temp","arrayOne","arrayTwo","mergeSortedArray","javaScriptSortedArray","sort","a","b","console","log","arraysAreEqual","max","random","onClick","bubbleSort","selectionSort","insertionSort","testSortingAlgorithms","className","map","value","idx","key","id","width","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e676ee97.chunk.js","sourcesContent":["export const mergeSort = array => {\r\n\tif (array.length === 1) return array;\r\n\r\n\tconst middleIndex = Math.floor(array.length / 2);\r\n\tconst firstHalf = mergeSort(array.slice(0, middleIndex));\r\n\tconst secondHalf = mergeSort(array.slice(middleIndex));\r\n\tconst sortedArray = [];\r\n\tlet i = 0,\r\n\t\tj = 0;\r\n\twhile (i < firstHalf.length && j < secondHalf.length) {\r\n\t\tif (firstHalf[i] < secondHalf[j]) {\r\n\t\t\tsortedArray.push(firstHalf[i++]);\r\n\t\t} else {\r\n\t\t\tsortedArray.push(secondHalf[j++]);\r\n\t\t}\r\n\t}\r\n\twhile (i < firstHalf.length) sortedArray.push(firstHalf[i++]);\r\n\twhile (j < secondHalf.length) sortedArray.push(secondHalf[j++]);\r\n\treturn sortedArray;\r\n};\r\n\r\nexport const bubbleSort = array => {\r\n\tconst animations = [];\r\n\tconst length = array.length;\r\n\tlet obj = {};\r\n\tlet shouldPush = false;\r\n\tfor (let i = 0; i < length; i++) {\r\n\t\tfor (let j = 0; j < length - i; j++) {\r\n\t\t\tif (array[j] > array[j + 1]) {\r\n\t\t\t\tshouldPush = true;\r\n\t\t\t\tobj = {\r\n\t\t\t\t\tindices: {firstIndex: j, secondIndex: j + 1},\r\n\t\t\t\t\tvalues: {firstValue: array[j], secondValue: array[j + 1]},\r\n\t\t\t\t\tswap: true,\r\n\t\t\t\t\tcolor: false,\r\n\t\t\t\t}\r\n\t\t\t\tlet tmp = array[j];\r\n\t\t\t\tarray[j] = array[j + 1];\r\n\t\t\t\tarray[j + 1] = tmp;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tshouldPush = true;\r\n\t\t\t\tobj = {\r\n\t\t\t\t\tindices: {firstIndex: j, secondIndex: j + 1},\r\n\t\t\t\t\tvalues: {firstValue: array[j], secondValue: array[j + 1]},\r\n\t\t\t\t\tswap: false,\r\n\t\t\t\t\tcolor: false,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(j === length - i - 1) {\r\n\t\t\t\tobj.color = true;\r\n\t\t\t}\r\n\t\t\tif (shouldPush) animations.push(obj);\r\n\t\t}\r\n\t}\r\n\treturn animations;\r\n};\r\n\r\nexport const selectionSort = array => {\r\n\tconst animations = [];\r\n\tlet obj = {};\r\n    for (let i = 0; i < array.length; i++) {\r\n        let min = i;\r\n        for (let j = i + 1; j < array.length; j++) {\r\n            if (array[min] > array[j]) {\r\n                min = j;\r\n            }\r\n\t\t}\r\n\t\tobj = {\r\n\t\t\tindices: {firstIndex: min, secondIndex: i},\r\n\t\t\tvalues: {firstValue: array[min], secondValue: array[i]},\r\n\t\t\tswap: true,\r\n\t\t\tcolor: true,\r\n\t\t}\r\n        if (min !== i) {\r\n\r\n            let tmp = array[i];\r\n            array[i] = array[min];\r\n\t\t\tarray[min] = tmp;\r\n\t\t}\r\n\t\tif(i === array.length - i - 1) {\r\n\t\t\tobj.color = true;\r\n\t\t}\r\n\t\tanimations.push(obj);\r\n\t}\r\n\treturn animations;\r\n};\r\n\r\nexport const insertionSort = array => {\r\n\tconst animations = [];\r\n\tlet obj = {};\r\n\tfor (let i = 1; i < array.length; i++) {\r\n\t\twhile(array[i] < array[i - 1]) {\r\n\t\t\tobj = {\r\n\t\t\t\tindices: {firstIndex: i, secondIndex: i - 1},\r\n\t\t\t\tvalues: {firstValue: array[i], secondValue: array[i - 1]},\r\n\t\t\t\tswap: true,\r\n\t\t\t\tcolor: true,\r\n\t\t\t}\r\n\t\t\tlet temp = array[i];\r\n\t\t\tarray[i] = array[i - 1];\r\n\t\t\tarray[i - 1] = temp;\r\n\t\t\tanimations.push(obj);\r\n\t\t\ti--;\r\n\t\t}\r\n\t}\r\n\treturn animations;\r\n};\r\n  \r\n","export const animate = (\r\n  animations,\r\n  speed,\r\n  algorithm,\r\n  colorDefault,\r\n  colorFinish,\r\n  colorSorted,\r\n  activeOne,\r\n  activeTwo\r\n) => {\r\n  for (let i = 0; i < animations.length; i++) {\r\n    setTimeout(() => {\r\n      const { firstIndex, secondIndex } = animations[i].indices;\r\n      const { firstValue, secondValue } = animations[i].values;\r\n      if (animations[i].swap) {\r\n        changeColors(firstIndex, secondIndex, speed, colorDefault, activeOne, activeTwo);\r\n        swapElements(firstIndex, secondIndex, firstValue, secondValue, speed);\r\n      }\r\n      if (animations[i].color) {\r\n        if (algorithm === \"bubble\") {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (animations[i].swap) {\r\n\t\t\t\t\tdocument.getElementById(\r\n\t\t\t\t\t  secondIndex\r\n\t\t\t\t\t).style.backgroundColor = colorFinish;\r\n\t\t\t\t  } else {\r\n\t\t\t\t\tdocument.getElementById(\r\n\t\t\t\t\t  firstIndex\r\n\t\t\t\t\t).style.backgroundColor = colorFinish;\r\n\t\t\t\t  }\r\n\t\t\t}, speed + 1);\r\n\t\t} \r\n\t\t else if (algorithm === \"insertion\") {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (animations[i].swap) {\r\n\t\t\t\t\tdocument.getElementById(\r\n\t\t\t\t\t  firstIndex\r\n\t\t\t\t\t).style.backgroundColor = colorFinish;\r\n\t\t\t\t\tdocument.getElementById(\r\n\t\t\t\t\t  secondIndex\r\n\t\t\t\t\t).style.backgroundColor = colorFinish;\r\n\t\t\t\t  }\r\n\t\t\t}, speed + 1);\r\n        }\r\n        else if (algorithm === \"selection\") {\r\n\t\t\t  setTimeout(() => {\r\n\t\t\t\tif (animations[i].swap) {\r\n\t\t\t\tdocument.getElementById(\r\n\t\t\t\t\tsecondIndex\r\n\t\t\t\t  ).style.backgroundColor = colorFinish;\r\n\t\t\t\t}\r\n\t\t\t  }, speed + 1);\r\n          }\r\n      }\r\n      if (i === animations.length - 1) {\r\n        setTimeout(() => {\r\n          finish(colorSorted, colorFinish);\r\n        }, 100);\r\n      }\r\n    }, i * speed);\r\n  }\r\n};\r\n\r\nconst changeColors = (firstIndex, secondIndex, speed, colorDefault, activeOne, activeTwo) => {\r\n  let speedMultiplier = 1;\r\n  if (speed <= 100) {\r\n    speedMultiplier = 10;\r\n  } else if (speed <= 1000) {\r\n    speedMultiplier = 100;\r\n  }\r\n  const els = document.getElementsByClassName(\"arr-el\");\r\n  setTimeout(() => {\r\n      els[firstIndex].style.backgroundColor = colorDefault;\r\n      els[secondIndex].style.backgroundColor = colorDefault;\r\n  }, speed);\r\n  setTimeout(() => {\r\n    els[firstIndex].style.backgroundColor = activeOne;\r\n    els[secondIndex].style.backgroundColor = activeTwo;\r\n  }, speed - 5 * speedMultiplier);\r\n};\r\nconst swapElements = (\r\n  firstIndex,\r\n  secondIndex,\r\n  firstValue,\r\n  secondValue,\r\n  speed\r\n) => {\r\n  setTimeout(() => {\r\n    document.getElementById(secondIndex).style.height = `${firstValue / 2}px`;\r\n    document.getElementById(firstIndex).style.height = `${secondValue / 2}px`;\r\n  }, speed);\r\n};\r\n\r\nconst finish = (colorBlue, colorGreen) => {\r\n  const els = document.getElementsByClassName(\"arr-el\");\r\n  for (let i = 0; i < els.length; i++) {\r\n\t  setTimeout(() => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tels[i].style.backgroundColor = colorBlue;  \r\n\t\t  }, i * 10)\r\n\t  }, 500);\r\n    setTimeout(() => {\r\n      els[i].style.backgroundColor = colorGreen;\r\n    }, i * 10);\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport * as SortingAlgorithms from '../SortingAlgorithms/SortingAlgorithms';\r\nimport * as SortingAnimations from '../SortingAnimations/SortingAnimations';\r\nimport './SortingVisualizer.css';\r\n\r\nconst ANIMATION_SPEED = 1000;\r\nconst COLOR_DEFAULT = '#e87e04'; // ZUTA\r\nconst COLOR_FINISH = '#27ae60'; // ZELENA\r\nconst COLOR_SORTED = '#2980b9'; // PLAVA\r\nconst COLOR_ACTIVE_ONE = \"#F22613\"; // CRVENA\r\nconst COLOR_ACTIVE_TWO = \"#9A12B3\"; // ZELENA\r\n\r\nexport default class SortingVisualizer extends Component {\r\n\tstate = {\r\n\t\tarray: [100, 500, 200, 300, 600, 400]\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.resetArray();\r\n\t}\r\n\tresetArray() {\r\n\t\tconst array = [];\r\n\t\tconst length = this.randomIntFromInterval(5, 200);\r\n\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\tarray.push(this.randomIntFromInterval(5, 950));\r\n\t\t}\r\n\t\tthis.setState({ array });\r\n\t\tconst els = document.getElementsByClassName('arr-el');\r\n\t\tfor (let i = 0; i < els.length; i++) {\r\n\t\t\tels[i].style.backgroundColor = COLOR_DEFAULT;\r\n\t\t}\r\n\t}\r\n\tmergeSort() {}\r\n\tbubbleSort() {\r\n\t\tconst animations = SortingAlgorithms.bubbleSort(this.state.array);\r\n\t\tSortingAnimations.animate(animations, ANIMATION_SPEED, 'bubble', COLOR_DEFAULT, COLOR_FINISH, COLOR_SORTED, COLOR_ACTIVE_ONE, COLOR_ACTIVE_TWO);\r\n\t}\r\n\tselectionSort() {\r\n\t\tconst animations = SortingAlgorithms.selectionSort(this.state.array);\r\n\t\tSortingAnimations.animate(animations, ANIMATION_SPEED, 'selection', COLOR_DEFAULT, COLOR_FINISH, COLOR_SORTED, COLOR_ACTIVE_ONE, COLOR_ACTIVE_TWO);\r\n\t}\r\n\tinsertionSort() {\r\n\t\tconst animations = SortingAlgorithms.insertionSort(this.state.array);\r\n\t\tSortingAnimations.animate(animations, ANIMATION_SPEED, 'insertion', COLOR_DEFAULT, COLOR_FINISH, COLOR_SORTED, COLOR_ACTIVE_ONE, COLOR_ACTIVE_TWO);\r\n\t}\r\n\tarraysAreEqual(arrayOne, arrayTwo) {\r\n\t\tif (arrayOne.length !== arrayTwo.length) return false;\r\n\t\tfor (let i = 0; i < arrayOne.length; i++) {\r\n\t\t\tif (arrayOne[i] !== arrayTwo[i]) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\ttestSortingAlgorithms() {\r\n\t\tconst array = [];\r\n\t\tconst length = this.randomIntFromInterval(5, 1000);\r\n\t\tfor (let i = 0; i < 100; i++) {\r\n\t\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\t\tarray.push(this.randomIntFromInterval(5, 1000));\r\n\t\t\t}\r\n\t\t\tconst mergeSortedArray = SortingAlgorithms.mergeSort(array);\r\n\t\t\tconst javaScriptSortedArray = array.slice().sort((a, b) => a - b);\r\n\t\t\tconsole.log(this.arraysAreEqual(javaScriptSortedArray, mergeSortedArray));\r\n\t\t}\r\n\t}\r\n\r\n\trandomIntFromInterval(min, max) {\r\n\t\treturn Math.floor(Math.random() * (max - min + 1) + min);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { array } = this.state;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<header>\r\n\t\t\t\t\t<h3>SORTING VISUALIZER</h3>\r\n\t\t\t\t\t<button onClick={() => this.resetArray()}>Generate New Array</button>\r\n\t\t\t\t\t<button onClick={() => this.bubbleSort()}>Bubble Sort</button>\r\n\t\t\t\t\t<button onClick={() => this.selectionSort()}>Selection Sort</button>\r\n\t\t\t\t\t<button onClick={() => this.insertionSort()}>Insertion Sort</button>\r\n\t\t\t\t\t<button onClick={() => this.testSortingAlgorithms()}>Test Sort</button>\r\n\t\t\t\t</header>\r\n\t\t\t\t<main>\r\n\t\t\t\t\t<div className='array-container'>\r\n\t\t\t\t\t\t{array.map((value, idx) => (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName='arr-el'\r\n\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\tid={idx}\r\n\t\t\t\t\t\t\t\tstyle={{ height: `${value / 2}px`, width: `${1000 / array.length}px` }}></div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</main>\r\n\t\t\t\t<footer>\r\n\t\t\t\t\t<address>Developed by Ognjen Vujasinovic. All Rights reserved &copy;</address>\r\n\t\t\t\t</footer>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}