{"version":3,"sources":["HeaderFooter/HeaderFooter.js","SortingAnimations/SortingAnimations.js","SortingVisualizer/SortingVisualizer.js","SortingAlgorithms/SortingAlgorithms.js","App.js","serviceWorker.js","index.js"],"names":["HeaderFooter","props","res","type","title","max","changeLength","resetAll","bubbleSort","selectionSort","insertionSort","className","value","onChange","e","target","id","htmlFor","name","defaultChecked","onClick","animate","animations","speed","algorithm","colorDefault","colorFinish","colorSorted","activeOne","activeTwo","enableButtons","length","setTimeout","finish","i","indices","firstIndex","secondIndex","values","firstValue","secondValue","changeColors","swap","swapElements","color","document","getElementById","style","backgroundColor","shouldSwap","speedMultiplier","els","getElementsByClassName","height","colorBlue","colorGreen","SortingVisualizer","state","array","this","resetArray","setSpeed","isNaN","alert","setState","push","randomIntFromInterval","radios","getElementsByName","checked","defaultValue","disableButtons","obj","shouldPush","j","tmp","SortingAlgorithms","SortingAnimations","btns","disabled","min","temp","Math","floor","random","bind","map","idx","key","width","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d3f9b378.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./HeaderFooter.css\";\r\n\r\nconst HeaderFooter = props => {\r\n  const {\r\n    type,\r\n    title,\r\n    max,\r\n    changeLength,\r\n    resetAll,\r\n    bubbleSort,\r\n    selectionSort,\r\n    insertionSort\r\n  } = props;\r\n  let res;\r\n  if (type === \"header\") {\r\n    res = (\r\n      <header>\r\n        <h3>{title}</h3>\r\n        <div className=\"length\">\r\n          <label>Length: </label>\r\n          <input\r\n            value={max}\r\n            onChange={e => {\r\n              changeLength(e.target.value);\r\n            }}\r\n            type=\"text\"\r\n            id=\"length-input\"\r\n          />\r\n        </div>\r\n        <div className=\"speed\">\r\n          <label htmlFor=\"speed\">Speed: </label>\r\n          <label htmlFor=\"speed\">1s</label>\r\n          <input type=\"radio\" value=\"1000\" name=\"speed\" id=\"speed1\" />\r\n          <label htmlFor=\"speed\">100ms</label>\r\n          <input type=\"radio\" value=\"100\" name=\"speed\" id=\"speed1\" />\r\n          <label htmlFor=\"speed\">10ms</label>\r\n          <input\r\n            defaultChecked\r\n            type=\"radio\"\r\n            value=\"10\"\r\n            name=\"speed\"\r\n            id=\"speed1\"\r\n          />\r\n        </div>\r\n        <button className=\"btn\" onClick={resetAll}>\r\n          Generate New Array\r\n        </button>\r\n        <button className=\"btn\" onClick={bubbleSort}>\r\n          Bubble Sort\r\n        </button>\r\n        <button className=\"btn\" onClick={selectionSort}>\r\n          Selection Sort\r\n        </button>\r\n        <button className=\"btn\" onClick={insertionSort}>\r\n          Insertion Sort\r\n        </button>\r\n      </header>\r\n    );\r\n  } else if (type === \"footer\") {\r\n    res = (\r\n      <footer>\r\n        <address>\r\n          Developed and designed by Ognjen Vujasinovic. All rights reserved\r\n          &copy;\r\n        </address>\r\n      </footer>\r\n    );\r\n  }\r\n  return res;\r\n};\r\nexport default HeaderFooter;\r\n","export const animate = (\n  animations,\n  speed,\n  algorithm,\n  colorDefault,\n  colorFinish,\n  colorSorted,\n  activeOne,\n  activeTwo,\n  enableButtons\n) => {\n\t// In case array is already sorted (there was a bug with Insertion, others will still loop and check)\n  if (animations.length === 0) {\n    setTimeout(() => {\n      finish(colorSorted, colorFinish);\n    }, 100);\n    setTimeout(() => {\n      enableButtons();\n    }, 2000);\n  }\n  for (let i = 0; i < animations.length; i++) {\n    setTimeout(() => {\n      const { firstIndex, secondIndex } = animations[i].indices;\n\t  const { firstValue, secondValue } = animations[i].values;\n\t  changeColors(\n\t\tfirstIndex,\n\t\tsecondIndex,\n\t\tspeed,\n\t\tcolorDefault,\n\t\tactiveOne,\n\t\tactiveTwo,\n\t\talgorithm,\n\t\tanimations[i].swap\n\t  );\n      if (animations[i].swap) {\n        swapElements(firstIndex, secondIndex, firstValue, secondValue, speed);\n\t  }\n      if (animations[i].color) {\n        if (algorithm === \"bubble\") {\n          setTimeout(() => {\n            if (animations[i].swap) {\n              document.getElementById(\n                secondIndex\n              ).style.backgroundColor = colorFinish;\n            } else {\n              document.getElementById(\n                firstIndex\n              ).style.backgroundColor = colorFinish;\n\t\t\t}\n\t\t\t// speed / 4\n          }, speed);\n        } else if (algorithm === \"insertion\") {\n          setTimeout(() => {\n            if (animations[i].swap) {\n              document.getElementById(\n                firstIndex\n              ).style.backgroundColor = colorFinish;\n              document.getElementById(\n                secondIndex\n              ).style.backgroundColor = colorFinish;\n            }\n          }, speed);\n        } else if (algorithm === \"selection\") {\n          setTimeout(() => {\n            if (animations[i].swap) {\n              document.getElementById(\n                secondIndex\n              ).style.backgroundColor = colorFinish;\n            }\n          }, speed);\n        }\n      }\n      if (i === animations.length - 1) {\n        setTimeout(() => {\n          finish(colorSorted, colorFinish);\n        }, speed);\n        setTimeout(() => {\n          enableButtons();\n        }, 2000);\n      }\n    }, i * speed);\n  }\n};\n\nconst changeColors = (\n  firstIndex,\n  secondIndex,\n  speed,\n  colorDefault,\n  activeOne,\n  activeTwo,\n  algorithm,\n   shouldSwap\n) => {\n  let speedMultiplier = 1;\n  if (speed <= 100) {\n    speedMultiplier = 10;\n  } else if (speed <= 1000) {\n    speedMultiplier = 100;\n  }\n  const els = document.getElementsByClassName(\"arr-el\");\n  if(shouldSwap) {\n\tif (algorithm !== \"insertion\") {\n\t\tsetTimeout(() => {\n\t\t  els[firstIndex].style.backgroundColor = colorDefault;\n\t\t  els[secondIndex].style.backgroundColor = colorDefault;\n\t\t}, speed);\n\t  }\n  }\n  else {\n\t  if(algorithm === \"bubble\") {\n\t\tsetTimeout(() => {\n\t\t\tels[firstIndex].style.backgroundColor = colorDefault;\n\t\t  }, speed);\t  \n\t  }\n  }\n\n  if(!shouldSwap) {\n  setTimeout(() => {\n\t  if(algorithm === \"bubble\")\n\t\t  els[firstIndex].style.backgroundColor = activeOne;\n\t\t}, speed - 5 * speedMultiplier);\n\t}\n\telse {\n\t\tsetTimeout(() => {\n\t\t\tels[firstIndex].style.backgroundColor = activeOne;\n\t\t\tels[secondIndex].style.backgroundColor = activeTwo;\n\t\t}, speed - 5 * speedMultiplier);\n\t}\n};\nconst swapElements = (\n  firstIndex,\n  secondIndex,\n  firstValue,\n  secondValue,\n  speed\n) => {\n  setTimeout(() => {\n    document.getElementById(secondIndex).style.height = `${firstValue / 2}px`;\n    document.getElementById(firstIndex).style.height = `${secondValue / 2}px`;\n  }, speed);\n};\n\nconst finish = (colorBlue, colorGreen) => {\n  const els = document.getElementsByClassName(\"arr-el\");\n  for (let i = 0; i < els.length; i++) {\n    setTimeout(() => {\n      setTimeout(() => {\n        els[i].style.backgroundColor = colorBlue;\n      }, i * 10);\n    }, 1000);\n    // U slucaju da su najmanji brojevi na svom mjestu i nismo prosli kroz njih moramo prvo sve obojiti zelenom, a tek onda plavom\n    setTimeout(() => {\n      els[i].style.backgroundColor = colorGreen;\n    }, i * 10);\n  }\n};\n","import React, { Component } from \"react\";\nimport HeaderFooter from \"../HeaderFooter/HeaderFooter\";\nimport * as SortingAlgorithms from \"../SortingAlgorithms/SortingAlgorithms\";\nimport * as SortingAnimations from \"../SortingAnimations/SortingAnimations\";\nimport \"./SortingVisualizer.css\";\n\nconst COLOR_DEFAULT = \"#e87e04\"; // ZUTA\nconst COLOR_FINISH = \"#27ae60\"; // ZELENA\nconst COLOR_SORTED = \"#2980b9\"; // PLAVA\nconst COLOR_ACTIVE_ONE = \"#F22613\"; // CRVENA\nconst COLOR_ACTIVE_TWO = \"#9A12B3\"; // LJUBICASTA\n\nexport default class SortingVisualizer extends Component {\n  state = {\n    array: [100, 200, 300, 400, 600, 500],\n    max: 50,\n    speed: 10\n  };\n\n  componentDidMount() {\n    this.resetArray();\n    this.setSpeed();\n  }\n  resetArray() {\n    const { max } = this.state;\n    if (max === \"\" || isNaN(max)) {\n      alert(\"Length must be a number!!!\");\n      this.setState({ max: 5 });\n      return false;\n    }\n    if (max < 5 || max > 200) {\n      alert(\"Length must be a number between 5 and 200!\");\n      this.setState({ max: 5 });\n      return false;\n    }\n    const array = [];\n    const length = max;\n    for (let i = 0; i < length; i++) {\n      array.push(this.randomIntFromInterval(5, 950));\n    }\n    this.setState({ array });\n    const els = document.getElementsByClassName(\"arr-el\");\n    for (let i = 0; i < els.length; i++) {\n      els[i].style.backgroundColor = COLOR_DEFAULT;\n    }\n  }\n  setSpeed() {\n    const radios = document.getElementsByName(\"speed\");\n    for (let i = 0; i < radios.length; i++) {\n      if (radios[i].checked) {\n        this.setState({ speed: radios[i].defaultValue });\n      }\n    }\n  }\n  resetAll() {\n    this.resetArray();\n    this.setSpeed();\n  }\n\n  bubbleSort() {\n    const { speed } = this.state;\n    this.disableButtons();\n    const animations = SortingAlgorithms.bubbleSort(this.state.array);\n    SortingAnimations.animate(\n      animations,\n      speed,\n      \"bubble\",\n      COLOR_DEFAULT,\n      COLOR_FINISH,\n      COLOR_SORTED,\n      COLOR_ACTIVE_ONE,\n      COLOR_ACTIVE_TWO,\n      this.enableButtons\n    );\n  }\n  selectionSort() {\n    const { speed } = this.state;\n    this.disableButtons();\n    const btns = document.getElementsByClassName(\"btn\");\n    for (let i = 0; i < btns.length; i++) {\n      btns[i].disabled = true;\n    }\n    const animations = SortingAlgorithms.selectionSort(this.state.array);\n    SortingAnimations.animate(\n      animations,\n      speed,\n      \"selection\",\n      COLOR_DEFAULT,\n      COLOR_FINISH,\n      COLOR_SORTED,\n      COLOR_ACTIVE_ONE,\n      COLOR_ACTIVE_TWO,\n      this.enableButtons\n    );\n  }\n  insertionSort() {\n    const { speed } = this.state;\n    this.disableButtons();\n    const btns = document.getElementsByClassName(\"btn\");\n    for (let i = 0; i < btns.length; i++) {\n      btns[i].disabled = true;\n    }\n    const animations = SortingAlgorithms.insertionSort(this.state.array);\n    SortingAnimations.animate(\n      animations,\n      speed,\n      \"insertion\",\n      COLOR_DEFAULT,\n      COLOR_FINISH,\n      COLOR_SORTED,\n      COLOR_ACTIVE_ONE,\n      COLOR_ACTIVE_TWO,\n      this.enableButtons\n    );\n  }\n  randomIntFromInterval(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  disableButtons() {\n    const btns = document.getElementsByClassName(\"btn\");\n    for (let i = 0; i < btns.length; i++) {\n      btns[i].disabled = true;\n    }\n  }\n  enableButtons() {\n    const btns = document.getElementsByClassName(\"btn\");\n    for (let i = 0; i < btns.length; i++) {\n      btns[i].disabled = false;\n    }\n  }\n  changeLength(value) {\n    this.setState({ max: value});\n  }\n  render() {\n    const { array, max } = this.state;\n    return (\n      <div>\n        <HeaderFooter\n          type=\"header\"\n          title=\"SORTING VISUALIZER\"\n          max={max}\n          changeLength={this.changeLength.bind(this)}\n          resetAll={this.resetAll.bind(this)}\n          bubbleSort={this.bubbleSort.bind(this)}\n          selectionSort={this.selectionSort.bind(this)}\n          insertionSort={this.insertionSort.bind(this)}\n        />\n        <main>\n          <div className=\"array-container\">\n            {array.map((value, idx) => (\n              <div\n                className=\"arr-el\"\n                key={idx}\n                id={idx}\n                style={{\n                  height: `${value / 2}px`,\n                  width: `${1000 / array.length}px`\n                }}\n              ></div>\n            ))}\n          </div>\n        </main>\n        <HeaderFooter type=\"footer\" />\n      </div>\n    );\n  }\n}\n","export const bubbleSort = array => {\n\tconst animations = [];\n\tconst length = array.length;\n\tlet obj = {};\n\tlet shouldPush = false;\n\tfor (let i = 0; i < length; i++) {\n\t\tfor (let j = 0; j < length - i; j++) {\n\t\t\tif (array[j] > array[j + 1]) {\n\t\t\t\tshouldPush = true;\n\t\t\t\tobj = {\n\t\t\t\t\tindices: {firstIndex: j, secondIndex: j + 1},\n\t\t\t\t\tvalues: {firstValue: array[j], secondValue: array[j + 1]},\n\t\t\t\t\tswap: true,\n\t\t\t\t\tcolor: false,\n\t\t\t\t}\n\t\t\t\tlet tmp = array[j];\n\t\t\t\tarray[j] = array[j + 1];\n\t\t\t\tarray[j + 1] = tmp;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tshouldPush = true;\n\t\t\t\tobj = {\n\t\t\t\t\tindices: {firstIndex: j, secondIndex: j + 1},\n\t\t\t\t\tvalues: {firstValue: array[j], secondValue: array[j + 1]},\n\t\t\t\t\tswap: false,\n\t\t\t\t\tcolor: false,\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(j === length - i - 1) {\n\t\t\t\tobj.color = true;\n\t\t\t}\n\t\t\tif (shouldPush) animations.push(obj);\n\t\t}\n\t}\n\treturn animations;\n};\n\nexport const selectionSort = array => {\n\tconst animations = [];\n\tlet obj = {};\n    for (let i = 0; i < array.length; i++) {\n        let min = i;\n        for (let j = i + 1; j < array.length; j++) {\n            if (array[min] > array[j]) {\n                min = j;\n            }\n\t\t}\n\t\tobj = {\n\t\t\tindices: {firstIndex: min, secondIndex: i},\n\t\t\tvalues: {firstValue: array[min], secondValue: array[i]},\n\t\t\tswap: true,\n\t\t\tcolor: true,\n\t\t}\n        if (min !== i) {\n\n            let tmp = array[i];\n            array[i] = array[min];\n\t\t\tarray[min] = tmp;\n\t\t}\n\t\tif(i === array.length - i - 1) {\n\t\t\tobj.color = true;\n\t\t}\n\t\tanimations.push(obj);\n\t}\n\treturn animations;\n};\n\nexport const insertionSort = array => {\n\tconst animations = [];\n\tlet obj = {};\n\tfor (let i = 1; i < array.length; i++) {\n\t\t\twhile(array[i] < array[i - 1]) {\n\t\t\t\tobj = {\n\t\t\t\t\tindices: {firstIndex: i, secondIndex: i - 1},\n\t\t\t\t\tvalues: {firstValue: array[i], secondValue: array[i - 1]},\n\t\t\t\t\tswap: true,\n\t\t\t\t\tcolor: true,\n\t\t\t\t}\n\t\t\t\tlet temp = array[i];\n\t\t\t\tarray[i] = array[i - 1];\n\t\t\t\tarray[i - 1] = temp;\n\t\t\t\tanimations.push(obj);\n\t\t\t\ti--;\n\t\t\t}\n\t}\n\treturn animations;\n};","import React from 'react';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}